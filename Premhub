-- Settings and Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/ScRiPtsTerS/KavoTest/main/kavotest8"))()
local Window = Library.CreateLib("PremiumHub KeySystem", "Premhub")
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/Jxereas/UI-Libraries/main/notification_gui_library.lua", true))()
local Players = game.Players.LocalPlayer.Name

-- Key
_G.Key = "talentispro"
_G.KeyInput = "string"

-- welcome notif
if Players == "streety_altYt" then
    Notification.new("info", Players.."/Owner", "The key is ".._G.Key)
elseif Players == "Streety_altYt" then
    Notification.new("info", Players.."/Owner", "The key is ".._G.Key)
elseif Players == "Kirito_darkrepulsers" then
    Notification.new("info", Players.."/Owner", "The key is ".._G.Key)
elseif Players == "kirito_darkrepulsers" then
    Notification.new("info", Players.."/Owner", "The key is ".._G.Key)
else
    Notification.new("info", Players, "welcome to the Premium Key System")
end

-- Destroy after right key
function Destroy()
    game:GetService("CoreGui").infinfinf:Destroy() -- infinfinf = name of gui
end
-- Key System
local Key = Window:NewTab("Key System")
local MainKey = Key:NewSection("Enter Key")
-- Enter/Type/Check key
MainKey:NewTextBox("Enter Key", "enter the correct key", function(txt)
	_G.KeyInput = txt

    if _G.KeyInput == _G.Key then
        Notification.new("success", "Correct Key :)", "correct key loading Premium Hub!")
        wait(2)
        Destroy()
        local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/ScRiPtsTerS/KavoTest/main/kavotest8"))()
        local Window = Library.CreateLib("GigaHub", "Premhub")
        print("GigaHub Loaded :)")
        print("Credits: ummidk(dripkage)#2417 <-- discord")
        print("Supported Games: BedWars, FlagWars, Rebirth Champions X, Tapping Legends X, Chinese freebie game, Tai Verdes Concert, Islands of Move, Mansion of Wonder, 24kGoldn Concert, Race Clicker, and Big PaintBall")
        ---------------------------------------------------------------------------------------------------------------------------------------  
        _G.gameid = 3214114884
        _G.gameid1 = 7619937171
        _G.gameid2 = 8967359816
        _G.gameid3 = 5306359293
        _G.gameid4 = 6901029464
        _G.gameid5 = 7541759836
        _G.gameid6 = 8540346411
        _G.gameid7 = 9285238704
        _G.gameid8 = 6872265039
        _G.gameid9 = 8750997647
        _G.gameid10 = 3527629287
        _G.gameid11 = 1

        if game.PlaceId == 3214114884 then
                local FlagWars = Window:NewTab("FlagWars")
                local MainFlagWars = FlagWars:NewSection("Kill")
                MainFlagWars:NewButton("Kill All 'PATCHED' ", "Equip the sniper", function()
                while true do
                for i, v in pairs(game.Players:GetPlayers()) do
                if v ~= game.Players.LocalPlayer then
                local args = {
                [1] = game:GetService("Players").LocalPlayer.Character.Sniper,
                [2] = {
                ["p"] = Vector3.new(716.1422729492188, 4.201920032501221, -52.15347671508789),
                ["pid"] = 1,
                ["part"] = v.Character.Head,
                ["d"] = 197.02999877929688,
                ["maxDist"] = 2000,
                ["h"] = v.Character.Humanoid,
                ["m"] = Enum.Material.SmoothPlastic,
                ["sid"] = 2,
                ["t"] = 0.468864430009719,
                ["n"] = Vector3.new(0.8855897784233093, 0.29755425453186035, 0.3566398322582245)
                }}
                game:GetService("ReplicatedStorage").WeaponsSystem.Network.WeaponHit:FireServer(unpack(args))
                end
                end
                wait(0.5)
            end
            end)
            MainFlagWars:NewLabel("Player Esp")
            MainFlagWars:NewButton("Esp", "See where players are", function()
                _G.FriendColor = Color3.fromRGB(0, 0, 255)
            _G.EnemyColor = Color3.fromRGB(255, 0, 0)
            _G.UseTeamColor = true

            --------------------------------------------------------------------
            local Holder = Instance.new("Folder", game.CoreGui)
            Holder.Name = "ESP"

            local Box = Instance.new("BoxHandleAdornment")
            Box.Name = "nilBox"
            Box.Size = Vector3.new(1, 2, 1)
            Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
            Box.Transparency = 0.7
            Box.ZIndex = 0
            Box.AlwaysOnTop = false
            Box.Visible = false

            local NameTag = Instance.new("BillboardGui")
            NameTag.Name = "nilNameTag"
            NameTag.Enabled = false
            NameTag.Size = UDim2.new(0, 200, 0, 50)
            NameTag.AlwaysOnTop = true
            NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
            local Tag = Instance.new("TextLabel", NameTag)
            Tag.Name = "Tag"
            Tag.BackgroundTransparency = 1
            Tag.Position = UDim2.new(0, -50, 0, 0)
            Tag.Size = UDim2.new(0, 300, 0, 20)
            Tag.TextSize = 15
            Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
            Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
            Tag.TextStrokeTransparency = 0.4
            Tag.Text = "nil"
            Tag.Font = Enum.Font.SourceSansBold
            Tag.TextScaled = false

            local LoadCharacter = function(v)
                repeat wait() until v.Character ~= nil
                v.Character:WaitForChild("Humanoid")
                local vHolder = Holder:FindFirstChild(v.Name)
                vHolder:ClearAllChildren()
                local b = Box:Clone()
                b.Name = v.Name .. "Box"
                b.Adornee = v.Character
                b.Parent = vHolder
                local t = NameTag:Clone()
                t.Name = v.Name .. "NameTag"
                t.Enabled = true
                t.Parent = vHolder
                t.Adornee = v.Character:WaitForChild("Head", 5)
                if not t.Adornee then
                    return UnloadCharacter(v)
                end
                t.Tag.Text = v.Name
                b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                local Update
                local UpdateNameTag = function()
                    if not pcall(function()
                        v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                        local maxh = math.floor(v.Character.Humanoid.MaxHealth)
                        local h = math.floor(v.Character.Humanoid.Health)
                    end) then
                        Update:Disconnect()
                    end
                end
                UpdateNameTag()
                Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
            end

            local UnloadCharacter = function(v)
                local vHolder = Holder:FindFirstChild(v.Name)
                if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                    vHolder:ClearAllChildren()
                end
            end

            local LoadPlayer = function(v)
                local vHolder = Instance.new("Folder", Holder)
                vHolder.Name = v.Name
                v.CharacterAdded:Connect(function()
                    pcall(LoadCharacter, v)
                end)
                v.CharacterRemoving:Connect(function()
                    pcall(UnloadCharacter, v)
                end)
                v.Changed:Connect(function(prop)
                    if prop == "TeamColor" then
                        UnloadCharacter(v)
                        wait()
                        LoadCharacter(v)
                    end
                end)
                LoadCharacter(v)
            end

            local UnloadPlayer = function(v)
                UnloadCharacter(v)
                local vHolder = Holder:FindFirstChild(v.Name)
                if vHolder then
                    vHolder:Destroy()
                end
            end

            for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                spawn(function() pcall(LoadPlayer, v) end)
            end

            game:GetService("Players").PlayerAdded:Connect(function(v)
                pcall(LoadPlayer, v)
            end)

            game:GetService("Players").PlayerRemoving:Connect(function(v)
                pcall(UnloadPlayer, v)
            end)

            game:GetService("Players").LocalPlayer.NameDisplayDistance = 0

            if _G.Reantheajfdfjdgs then
                return
            end

            _G.Reantheajfdfjdgs = ":suifayhgvsdghfsfkajewfrhk321rk213kjrgkhj432rj34f67df"

            local players = game:GetService("Players")
            local plr = players.LocalPlayer

            function esp(target, color)
                if target.Character then
                    if not target.Character:FindFirstChild("GetReal") then
                        local highlight = Instance.new("Highlight")
                        highlight.RobloxLocked = true
                        highlight.Name = "GetReal"
                        highlight.Adornee = target.Character
                        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        highlight.FillColor = color
                        highlight.Parent = target.Character
                    else
                        target.Character.GetReal.FillColor = color
                    end
                end
            end

            while task.wait() do
                for i, v in pairs(players:GetPlayers()) do
                    if v ~= plr then
                        esp(v, _G.UseTeamColor and v.TeamColor.Color or ((plr.TeamColor == v.TeamColor) and _G.FriendColor or _G.EnemyColor))
                    end
                end
            end
            end)

            MainFlagWars:NewLabel("Vape V4 hitbox expand")
            MainFlagWars:NewButton("Vape V4", "find 'hitbox' right click, change to 75", function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/NewMainScript.lua", true))()
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
        if game.PlaceId == 7619937171 then
            local Freebies5 = Window:NewTab("Tai Verdes Concert")
            local MainFreebies5 = Freebies5:NewSection("Freebies")

            MainFreebies5:NewButton("Get Freebies", "gets you free items", function()

            game:GetService("ReplicatedStorage").RemoteEvent:FireServer("CollectItem","Tie-Dye Visor")
            wait(.1)
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer("CollectItem","Sunshine Backpack")
            wait(.1)
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer("CollectItem","Shady Circle Glasses")

            local folder = game.Workspace.Map.SunCollectables;

            for i, Obj in next, folder:GetChildren() do
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Obj.CFrame
                wait(0.1)
            end
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
        if game.PlaceId == 8967359816 then
            local Freebies4 = Window:NewTab("24kGoldn Concert")
            local MainFreebies4 = Freebies4:NewSection("Freebies")

            MainFreebies4:NewButton("Get Freebies", "gets you free items", function()
                loadstring
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
        if game.PlaceId == 5306359293 then
            local Freebies3 = Window:NewTab("islands of Move")
            local MainFreebies3 = Freebies3:NewSection("Freebies")

            MainFreebies3:NewButton("Redeem all Codes", "redeems all freebies codes", function()
                local args = {
                    [1] = "DIY"
                }

                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "VictoryLap"
                }

                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "WorldAlive"
                }

                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "SettingTheStage"
                }

                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "StrikeAPose"
                }

                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "GetMoving"
                }

                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
        if game.PlaceId == 6901029464 then
            local Freebies2 = Window:NewTab("Mansion of Wonder")
            local MainFreebies2 = Freebies2:NewSection("Freebies")

            MainFreebies2:NewButton("Redeem all Codes", "redeems all freebies codes", function()
                local args = {
                    [1] = "Glimmer"
                }
                
                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "Boardwalk"
                }
                
                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "ParticleWizard"
                }
                
                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "FXArtist"
                }
                
                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))

                local args = {
                    [1] = "ThingsGoBoom"
                }
                
                game:GetService("ReplicatedStorage").Events.RedeemCode:FireServer(unpack(args))
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
        if game.PlaceId == 7541759836 then
            local Freebies = Window:NewTab("Chinese Freebies game")
            local MainFreebies = Freebies:NewSection("Inf Credits")

            MainFreebies:NewButton("Get Inf Credits", "Click Star, buy items with Credits", function()
                loadstring(game:HttpGet('https://gist.githubusercontent.com/stellar-4242/acc5ba21577da9018802a5f70c2b0bab/raw/c81d0500b10c6fb9d73025d87a049b77a884b434/cgInfCreds.lua'))()
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
        if game.PlaceId == 8540346411 then
            local RebirthX = Window:NewTab("Rebirth Champions X")
            local MainRebirthX = RebirthX:NewSection("Auto Settings")

            MainRebirthX:NewToggle("Auto Tap", "Taps for you", function(state)
                if state then
                    _G.AT = true;

            while _G.AT == true do
            game:GetService("ReplicatedStorage").Events.Click3:FireServer()
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.AT = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Auto Rebirth", "Rebirths for you", function (state)
                if state then
                    _G.AR = true;
            
            while _G.AR == true do
            local args = 
            {[1] = _G.DeezAmount}
            
            game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.AR = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewDropdown("Rebirth Amount", "Select amount to Rebirth", {"1", "5", "10", "25", "100", "500", "2.5k", "5k", "10k", "50k", "250k", "1M", "25M", "100M", "500M", "1B", "2.5B", "10B", "250B", "1T", "10T", "25T", "100T", "250T", "1Qd", "2.5Qd", "10Qd", "50Qd", "250Qd", "1Qn", "5Qn", "50Qn", "100Qn", "500Qn", "1sx", "10Sx", "25Sx", "100Sx", "500Sx", "1Sp", "2.5Sp", "10Sp", "25Sp", "100Sp", "250Sp", "1o", "2.5o", "10o", "25o", "100o", "250o", "1N", "2.5N", "10N", "25n", "100N", "250N", "1De", "2De", "100De", "250De", "1Ud", "", "", "", "", "", ""}, function(mob)
                if mob == '1' then
                    _G.DeezAmount = 1 
                elseif mob == '5' then
                    _G.DeezAmount = 2 
                elseif mob == '10' then
                    _G.DeezAmount = 3
                elseif mob == '25' then
                    _G.DeezAmount = 4
                elseif mob == '100' then
                    _G.DeezAmount = 5
                elseif mob == '500' then
                    _G.DeezAmount = 6
                elseif mob == '2.5k' then
                    _G.DeezAmount = 7
                elseif mob == '5k' then
                    _G.DeezAmount = 8
                elseif mob == '10k' then
                    _G.DeezAmount = 9
                elseif mob == '50k' then
                    _G.DeezAmount = 10
                elseif mob == '250k' then
                    _G.DeezAmount = 11
                elseif mob == '1M' then
                    _G.DeezAmount = 12
                elseif mob == '25M' then
                    _G.DeezAmount = 13
                elseif mob == '100M' then
                    _G.DeezAmount = 14
                elseif mob == '500M' then
                    _G.DeezAmount = 15
                elseif mob == '1B' then
                    _G.DeezAmount = 16
                elseif mob == '2.5B' then
                    _G.DeezAmount = 17
                elseif mob == '10B' then
                    _G.DeezAmount = 18
                elseif mob == '250B' then
                    _G.DeezAmount = 19
                elseif mob == '1T' then
                    _G.DeezAmount = 20
                elseif mob == '10T' then
                    _G.DeezAmount = 21
                elseif mob == '25T' then
                    _G.DeezAmount = 22
                elseif mob == '100T' then
                    _G.DeezAmount = 23
                elseif mob == '250T' then
                    _G.DeezAmount = 24
                elseif mob == '1Qd' then
                    _G.DeezAmount = 25
                elseif mob == '2.5Qd' then
                    _G.DeezAmount = 26
                elseif mob == '10Qd' then
                    _G.DeezAmount = 27
                elseif mob == '50Qd' then
                    _G. DeezAmount = 28
                elseif mob == '250Qd' then
                    _G. DeezAmount = 29
                elseif mob == '1Qn' then
                    _G. DeezAmount = 30
                elseif mob == '5Qn' then
                    _G. DeezAmount = 31
                elseif mob == '50Qn' then
                    _G. DeezAmount = 32
                elseif mob == '100Qn' then
                    _G. DeezAmount = 33
                elseif mob == '500Qn' then
                    _G. DeezAmount = 34
                elseif mob == '1Sx' then
                    _G. DeezAmount = 35
                elseif mob == '10Sx' then
                    _G. DeezAmount = 36
                elseif mob == '25Sx' then
                    _G. DeezAmount = 37
                elseif mob == '100Sx' then
                    _G. DeezAmount = 38
                elseif mob == '500Sx' then
                    _G. DeezAmount = 39
                elseif mob == '1Sp' then
                    _G. DeezAmount = 40
                elseif mob == '2.5Sp' then
                    _G. DeezAmount = 41
                elseif mob == '10Sp' then
                    _G. DeezAmount = 42
                elseif mob == '25Sp' then
                    _G. DeezAmount = 43
                elseif mob == '100Sp' then
                    _G. DeezAmount = 44
                elseif mob == '250Sp' then
                    _G. DeezAmount = 45
                elseif mob == '1o' then
                    _G. DeezAmount = 46
                elseif mob == '2.5o' then
                    _G. DeezAmount = 47
                elseif mob == '10o' then
                    _G. DeezAmount = 48
                elseif mob == '25o' then
                    _G. DeezAmount = 49
                elseif mob == '100o' then
                    _G. DeezAmount = 50
                elseif mob == '250o' then
                    _G. DeezAmount = 51
                elseif mob == '1N' then
                    _G. DeezAmount = 52
                elseif mob == '2.5N' then
                    _G. DeezAmount = 53
                elseif mob == '10N' then
                    _G. DeezAmount = 54
                elseif mob == '25N' then
                    _G. DeezAmount = 55
                elseif mob == '100N' then
                    _G. DeezAmount = 56
                elseif mob == '2De' then
                    _G. DeezAmount = 57
                elseif mob == '100De' then
                    _G. DeezAmount = 58
                elseif mob == '250De' then
                    _G. DeezAmount = 59
                elseif mob == '1Ud' then
                    _G. DeezAmount = 60
                elseif mob == '' then
                    _G. DeezAmount = 61
                elseif mob == '' then
                    _G. DeezAmount = 62
                elseif mob == '' then
                    _G. DeezAmount = 63
                elseif mob == '' then
                    _G. DeezAmount = 64
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Auto Open Egg", "opens egg", function(state)
                if state then
                    _G.EggOpenEz = true;

            while _G.EggOpenEz == true do
            local args = 
            {[1] = _G.EzName,
            [2] = _G.Single}

            game:GetService("ReplicatedStorage").Functions.Unbox:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.EggOpenEz = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewDropdown("EggName", "Select Egg Name", {"Basic","Mythic","Forest","Beach","Atlantis", "Desert", "Winter", "Volcano", "Magma", "Moon", "Cyber", "Magic", "Heaven", "Nuclear", "Void", "Spooky", "Cave", "Steampunk", "Hell", "Space", "Mars", "Alien", "Galaxy Forest", "Space Lab", "Fantasy.", "Neon", "Shadow", "Destruction", "Sun", "Saturn"}, function(mob)
                if mob == 'Basic' then
                    _G.EzName = "Basic"
                elseif mob == 'Mythic' then
                    _G.EzName = "Mythic"
                elseif mob == 'Forest' then
                    _G.EzName = "Forest"
                elseif mob == 'Beach' then
                    _G.EzName = "Beach"
                elseif mob == 'Atlantis' then
                    _G.EzName = "Atlantis"
                elseif mob == 'Desert' then
                    _G.EzName = "Desert"
                elseif mob == 'Winter' then
                    _G.EzName = "Winter"
                elseif mob == 'Volcano' then
                    _G.EzName = "Volcano"
                elseif mob == 'Magma' then
                    _G.EzName = "Magma"
                elseif mob == 'Moon' then
                    _G.EzName = "Moon"
                elseif mob == 'Cyber' then
                    _G.EzName = "Cyber"
                elseif mob == 'Magic' then
                    _G.EzName = "Magic"
                elseif mob == 'Heaven' then
                    _G.EzName = "Heaven"
                elseif mob == 'Nuclear' then
                    _G.EzName = "Nuclear"
                elseif mob == 'Void' then
                    _G.EzName = "Void"
                elseif mob == 'Spooky' then
                    _G.EzName = "Spooky"
                elseif mob == 'Cave' then
                    _G.EzName = "Cave"
                elseif mob == 'Steampunk' then
                    _G.EzName = "Steampunk"
                elseif mob == 'Hell' then
                    _G.EzName = "Hell"
                elseif mob == 'Space' then
                    _G.EzName = "Space"
                elseif mob == 'Mars' then
                    _G.EzName = "Mars"
                elseif mob == 'Alien' then
                    _G.EzName = "Alien"
                elseif mob == 'Galaxy Forest' then
                    _G.EzName = "Galaxy Forest"
                elseif mob == 'Space Lab' then
                    _G.EzName = "Space Lab."
                elseif mob == 'Fantasy.' then
                    _G.EzName = "Fantasy"
                elseif mob == 'Neon' then
                    _G.EzName = "Neon"
                elseif mob == 'Shadow' then
                    _G.EzName = "Shadow"
                elseif mob == 'Destruction' then
                    _G.EzName = "Destruction"
                elseif mob == 'Sun' then
                    _G.EzName = "Sun"
                elseif mob == 'Saturn' then
                    _G.EzName = 'Saturn'
                end
            end)

            -- Rebirth X
            MainRebirthX:NewDropdown("Open Amount", "Select amount to open", {"1", "3",}, function(mob)
                if mob == '1' then
                    _G.Single = "Single" 
                elseif mob == '3' then
                    _G.Single = "Triple"
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Set best world boost", "makes you have best world boost ", function(state)
                if state then
            _G.BWBoost = true

            while _G.BWBoost == true do
            local args = 
            {[1] = "Saturn"}

            game:GetService("ReplicatedStorage").Events.WorldBoost:FireServer(unpack(args))
                wait(0.000000000000000000000000000000000005)   
            end
                else
                    _G.BWBoost = false;
                end    
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy Click Multi", "auto buys click multi", function(state)
                if state then
                    _G.AutoBuyCM = true;

            while _G.AutoBuyCM == true do
            local args = {
                [1] = "ClickMultiplier"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.AutoBuyCM = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("CraftAll", "auto crafts all Pets", function(state)
                if state then
                    _G.AutoCraftAll = true;

            while _G.AutoCraftAll == true do

            local args = {
                [1] = "CraftAll",
                [2] = {}
            }

            game:GetService("ReplicatedStorage").Functions.Request:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.AutoCraftAll = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("x2Clicks Potion", "auto buys click potion", function(state)
                if state then
                    _G.ClickPotion = true;

            while _G.ClickPotion == true do
            local args = {
                [1] = "x2Clicks",
                [2] = 1
            }

            game:GetService("ReplicatedStorage").Events.Potion:FireServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.ClickPotion = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("x2Gems Potion", "auto buys gem potion", function(state)
                if state then
                    _G.GemPo = true;

            while _G.GemPo == true do
            local args = {
                [1] = "x2Gems",
                [2] = 1
            }

            game:GetService("ReplicatedStorage").Events.Potion:FireServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.GemPo = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("x2Luck Potion", "auto buys luck potion", function(state)
                if state then
                    _G.LuckPo = true;

            while _G.LuckPo == true do
            local args = {
                [1] = "x2Luck",
                [2] = 1
            }

            game:GetService("ReplicatedStorage").Events.Potion:FireServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.LuckPo= false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("x2Rebirths Potion", "auto buys rebirth potion", function(state)
                if state then
                    _G.RPO = true;

            while _G.RPO == true do
            local args = {
                [1] = "x2Rebirths",
                [2] = 1
            }

            game:GetService("ReplicatedStorage").Events.Potion:FireServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.RPO = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("x2PetXP Potion", "auto buys pet xp potion", function(state)
                if state then
                    _G.PetXPo = true;

            while _G.PetXPo == true do
            local args = {
                [1] = "x2PetXP",
                [2] = 1
            }

            game:GetService("ReplicatedStorage").Events.Potion:FireServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.PetXPo = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("x2HatchSpeed Potion", "auto buys hatch speed potion", function(state)
                if state then
                    _G.HatchPo = true;

            while _G.HatchPo == true do
            local args = {
                [1] = "x2HatchSpeed",
                [2] = 1
            }

            game:GetService("ReplicatedStorage").Events.Potion:FireServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.HatchPo = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy WalkSpeed", "auto buys WalkSpeed", function(state)
                if state then
                    _G.WSAB = true;

            while _G.WSAB == true do
            local args = {
                [1] = "WalkSpeed"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.WSAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy Gem Multi", "auto buys gem multi", function(state)
                if state then
                    _G.GMAB = true;

            while _G.GMAB == true do
            local args = {
                [1] = "GemsMultiplier"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.GMAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy PetEquip", "auto buys more pet equip", function(state)
                if state then
                    _G.PetEAB = true;

            while _G.PetEAB == true do
            local args = {
                [1] = "PetEquip"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.PetEAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy PetStorage", "auto buys pet Storage", function(state)
                if state then
                    _G.PetStoreAB = true;

            while _G.PetStoreAB == true do
            local args = {
                [1] = "PetStorage"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.PetStoreAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy Luck Multi", "auto buys luck multi", function(state)
                if state then
                    _G.LMAB = true;

            while _G.LMAB == true do
            local args = {
                [1] = "LuckMultiplier"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.LMAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy FreeAutoClickUpgrade", "auto buys faster auto click", function(state)
                if state then
                    _G.FFAC = true;

            while _G.FFAC == true do
            local args = {
                [1] = "FasterFreeAutoClicker"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.FFAC = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewLabel("buttons")

            -- Rebirth X
            MainRebirthX:NewButton("Buy Aura", "Select Aura to buy first", function()
                local args = 
            {[1] = _G.AuraName}

            game:GetService("ReplicatedStorage").Functions.Aura:InvokeServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewDropdown("Aura Select", "Select Aura to buy", {"Water Aura", "Forest Aura", "Ice Aura", "Party Aura", "Light Aura", "Sun Aura", "Galaxy Aura", "Nuclear Aura", "Void Aura", "Plasma Aura", "Crystal Aura", "Soul Aura", "Hell Aura", "Electro Aura", "Alien Aura", "Prismatic Aura", "Atom Aura", "Fantasy Aura", "Yin Yang Aura", "Hypno Aura", "Shadow Aura", "Black Lightning Aura", "Destruction Aura", "Earth Aura", "Saturn Aura"}, function(mob)
                if mob == 'Water Aura' then
                    _G.AuraName = 1 
                elseif mob == 'Forest Aura' then
                    _G.AuraName = 2
                elseif mob == 'Ice Aura' then
                    _G.AuraName = 3
                elseif mob == 'Party Aura' then
                    _G.AuraName = 4
                elseif mob == 'Light Aura' then
                    _G.AuraName = 5
                elseif mob == 'Sun Aura' then
                    _G.AuraName = 6
                elseif mob == 'Galaxy Aura' then
                    _G.AuraName = 7
                elseif mob == 'Nuclear Aura' then
                    _G.AuraName = 8
                elseif mob == 'Void Aura' then
                    _G.AuraName = 9
                elseif mob == 'Plasma Aura' then
                    _G.AuraName = 10
                elseif mob == 'Crystal Aura' then
                    _G.AuraName = 11
                elseif mob == 'Soul Aura' then
                    _G.AuraName = 12
                elseif mob == 'Hell Aura' then
                    _G.AuraName = 13
                elseif mob == 'Electro Aura' then
                    _G.AuraName = 14
                elseif mob == 'Alien Aura' then
                    _G.AuraName = 15
                elseif mob == 'Prismatic Aura' then
                    _G.AuraName = 16
                elseif mob == 'Atom Aura' then
                    _G.AuraName = 17
                elseif mob == 'Fantasy Aura' then
                    _G.AuraName = 18
                elseif mob == 'Yin Yang Aura' then
                    _G.AuraName = 19
                elseif mob == 'Hypno Aura' then
                    _G.AuraName = 20
                elseif mob == 'Shadow Aura' then
                    _G.AuraName = 21
                elseif mob == 'Black Lightning Aura' then
                    _G.AuraName = 22
                elseif mob == 'Destruction Aura' then
                    _G.AuraName = 23
                elseif mob == 'Earth Aura' then
                    _G.AuraName = 24
                elseif mob == 'Saturn Aura' then
                    _G.AuraName = 25
                end
            end)

            -- Rebirth X
            MainRebirthX:NewButton("Buy TapSkin", "select tapskin to buy", function()
                _G.TAPPYSKIN = true;

            while _G.TAPPYSKIN == true do
            local args = 
            {[1] = _G.TapNumber}

            game:GetService("ReplicatedStorage").Functions.TapSkin:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
            end)

            -- Rebirth X
            MainRebirthX:NewDropdown("TapSkin Select", "select tapskin", {"Grass Skin", "Water Skin", "Light Skin", "Dark Skin", "Sun Skin", "Fire Skin", "Toxic Skin", "Cyber Skin", "Galaxy Skin", "Candy Skin", "Void Skin", "Powerful Skin", "Electro Skin", "Devil Skin", "Earth Skin", "Galactic Skin", "Saturn Skin"}, function(mob)
                if mob == 'Grass Skin' then
                    _G.TapNumber = 1 
                elseif mob == 'Water Skin' then
                    _G.TapNumber = 2
                elseif mob == 'Light Skin' then
                    _G.TapNumber = 3
                elseif mob == 'Dark Skin' then
                    _G.TapNumber = 4
                elseif mob == 'Sun Skin' then
                    _G.TapNumber = 5
                elseif mob == 'Fire Skin' then
                    _G.TapNumber = 6
                elseif mob == 'Toxic Skin' then
                    _G.TapNumber = 7
                elseif mob == 'Cyber Skin' then
                    _G.TapNumber = 8
                elseif mob == 'Galaxy Skin' then
                    _G.TapNumber = 9
                elseif mob == 'Candy Skin' then
                    _G.TapNumber = 10
                elseif mob == 'Void Skin' then
                    _G.TapNumber = 11
                elseif mob == 'Powerful Skin' then
                    _G.TapNumber = 12
                elseif mob == 'Electro Skin' then
                    _G.TapNumber = 13
                elseif mob == 'Devil Skin' then
                    _G.TapNumber = 14
                elseif mob == 'Earth Skin' then
                    _G.TapNumber = 15
                elseif mob == 'Galactic Skin' then
                    _G.TapNumber = 16
                elseif mob == 'Saturn Skin' then
                    _G.TapNumber = 17
                end
            end)

            -- Rebirth X
            MainRebirthX:NewButton("MuteMusic", "Mutes the music", function()
                local args = 
                {[1] = "MuteMusic",
                [2] = true}
                game:GetService("ReplicatedStorage").Events.Setting:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("MuteSounds", "Mutes the SOUNDS", function()
                local args = {
                    [1] = "MuteSounds",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.Setting:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("HidePopUps", "hides the PopUps", function()
                local args = {
                    [1] = "PopUp",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.Setting:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("HideOtherPets", "Hides other people's Pets", function()
                local args = {
                    [1] = "HideOtherPets",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.Setting:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("HideYourPets", "Hides your Pets", function()
                local args = {
                    [1] = "HideYourPets",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.Setting:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("HideBoosts", "Hides the Boosts on your screen", function()
                local args = {
                    [1] = "HideBoosts",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.Setting:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("HidesAuras", "Hides auras", function()
                local args = {
                    [1] = "HideAuras",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.Setting:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("claim all chest", "collects all chest", function()
                local args = {
                    [1] = "Spawn"
                }
                
                game:GetService("ReplicatedStorage").Events.Chest:FireServer(unpack(args))

                local args = {
                    [1] = "Beach"
                }
                
                game:GetService("ReplicatedStorage").Events.Chest:FireServer(unpack(args))

                local args = {
                    [1] = "Winter"
                }
                
                game:GetService("ReplicatedStorage").Events.Chest:FireServer(unpack(args))

                local args = {
                    [1] = "Nuclear"
                }
                
                game:GetService("ReplicatedStorage").Events.Chest:FireServer(unpack(args))

                local args = {
                    [1] = "Hell"
                }
                
                game:GetService("ReplicatedStorage").Events.Chest:FireServer(unpack(args))

                local args = {
                    [1] = "Cyber"
                }
                
                game:GetService("ReplicatedStorage").Events.Chest:FireServer(unpack(args))

                local args = {
                    [1] = "Space"
                }
                
                game:GetService("ReplicatedStorage").Events.Chest:FireServer(unpack(args))

                local args = {
                    [1] = "Galaxy"
                }
                
                game:GetService("ReplicatedStorage").Events.Chest:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("Set Delete Common", "sets autodelete to Common", function()
                local args = {
                    [1] = "Common",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.AutoDelete:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("Set Delete Uncommon", "sets autodelete Uncommon", function()
                local args = {
                    [1] = "Uncommon",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.AutoDelete:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("Set Delete Rare", "sets autodelete Rare", function()
                local args = {
                    [1] = "Rare",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.AutoDelete:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("Set Delete Epic", "sets autodelete Epic", function()
                local args = {
                    [1] = "Epic",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.AutoDelete:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("Set Delete Legendary", "sets autodelete Legendary", function()
                local args = {
                    [1] = "Legendary",
                    [2] = true
                }
                
                game:GetService("ReplicatedStorage").Events.AutoDelete:FireServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewButton("Buy FreeAutoClicker", "free autoclick = slow, no upgrades", function()
                local args = {
                    [1] = "FreeAutoClicker"
                }
                
                game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
            end)  

            -- Rebirth X
            MainRebirthX:NewLabel("Space upgrades")

            -- Rebirth X
            MainRebirthX:NewButton("Buy teleport", "allows you to teleport to unlocked areas", function()
                local args = {
                    [1] = "Teleport",
                    [2] = "space"
                }
                game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy ClickMultiSpace", "auto buys click multi space", function(state)
                if state then
                    _G.CMSAB = true;

            while _G.CMSAB == true do
            local args = {
                [1] = "ClickMultiplier",
                [2] = "space"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.CMSAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy ChestCoolDown", "auto buys ChestCoolDown", function(state)
                if state then
                    _G.ChestCoolDown = true;

            while _G.ChestCoolDown == true do
            local args = {
                [1] = "ChestCountdown",
                [2] = "space"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.ChestCoolDown = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy BankSpace", "auto buys bank space", function(state)
                if state then
                    _G.Bspace = true;

            while _G.Bspace == true do
            local args = {
                [1] = "BankSpace",
                [2] = "space"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.Bspace = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy MaxCombo", "auto buys max Combo", function(state)
                if state then
                    _G.MaxCSAB = true;

            while _G.MaxCSAB == true do
            local args = {
                [1] = "MaxCombo",
                [2] = "space"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.MaxCSAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy PetEquipSpace", "auto buys pet equip", function(state)
                if state then
                    _G.PetEquipSAB = true;

            while _G.PetEquipSAB == true do
            local args = {
                [1] = "PetEquip",
                [2] = "space"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.PetEquipSAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy LuckMultiSpace", "auto buys luck multi", function(state)
                if state then
                    _G.LuckMSAB = true;

            while _G.LuckMSAB == true do
            local args = {
                [1] = "LuckMultiplier",
                [2] = "space"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.LuckMSAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("Buy GoldenChance", "auto buys goldenchance", function(state)
                if state then
                    _G.GoldCSAB = true;

            while _G.GoldCSAB == true do
            local args = {
                [1] = "GoldenChance",
                [2] = "space"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end

                else
                    _G.GoldCSAB = false;
                end
            end)

            -- Rebirth X
            MainRebirthX:NewToggle("AutoToxicChance", "auto buys toxic chance", function(state)
                if state then
                    _G.ToxicCSAB = true;

            while _G.ToxicCSAB == true do
            local args = {
                [1] = "ToxicChance",
                [2] = "space"
            }

            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
                wait(0.000000000000000000000000000000000005)
            end
                else
                    _G.ToxicCSAB = false;
                end
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
        if game.PlaceId == 8750997647 then
            local TappingX = Window:NewTab("Tapping legends X")
            local MainTappingX = TappingX:NewSection("Basic Settings")

            -- Tapping Legends X
            MainTappingX:NewButton("Buy TapSkin", "Select tapskin to buy", function() 

                local args = 
            {[1] = "Purchase",
            [2] = _G.TapSkinName}
                
                game:GetService("ReplicatedStorage").Remotes.TapSkinAction:FireServer(unpack(args))
                
                end)

            -- Tapping Legends X
            MainTappingX:NewDropdown("Select TapSkin", "lets you buy ", {"PixLized", "Rocky", "Hexed", "Streak", "Aurora", "Magical", "Aesthetic", "Emerald", "Swirl", "Lightning", "Energy", "Galactical", "Vibrant", "HellSkin", "FireWork", "Circuit", "Warped", "Bubbly", "Ripple",}, function(mob)
                if mob == 'PixLized' then
                    _G.TapSkinName = 1
                elseif mob == 'Rocky' then
                    _G.TapSkinName = 2
                elseif mob == 'Hexed' then
                    _G.TapSkinName = 3
                elseif mob == 'Streak' then
                    _G.TapSkinName = 4
                elseif mob == 'Aurora' then
                    _G.TapSkinName = 5
                elseif mob == 'Magical' then
                    _G.TapSkinName = 6
                elseif mob == 'Aesthetic' then
                    _G.TapSkinName = 7
                elseif mob == 'Emerald' then
                    _G.TapSkinName = 8
                elseif mob == 'Swirl' then
                    _G.TapSkinName = 9
                elseif mob == 'Lightning' then
                    _G.TapSkinName = 10
                elseif mob == 'Energy' then
                    _G.TapSkinName = 11
                elseif mob == 'Galactical' then
                    _G.TapSkinName = 12
                elseif mob == 'Vibrant' then
                    _G.TapSkinName = 13
                elseif mob == 'HellSkin' then
                    _G.TapSkinName = 14
                elseif mob == 'FireWork' then
                    _G.TapSkinName = 15
                elseif mob == 'Circuit' then
                    _G.TapSkinName = 16
                elseif mob == 'Warped' then
                    _G.TapSkinName = 17
                elseif mob == 'Bubbly' then
                    _G.TapSkinName = 18
                elseif mob == 'Ripple' then
                    _G.TapSkinName = 19
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewButton("TapSkin Equip", "equips tapskin that you own", function()
                local args = 
            {[1] = "Equip",
            [2] = _G.TapSkinNameEquip}
                
                game:GetService("ReplicatedStorage").Remotes.TapSkinAction:FireServer(unpack(args))
            end)

            -- Tapping Legends X
            MainTappingX:NewDropdown("Select TapSkin", "lets you buy ", {"PixLized", "Rocky", "Hexed", "Streak", "Aurora", "Magical", "Aesthetic", "Emerald", "Swirl", "Lightning", "Energy", "Galactical", "Vibrant", "HellSkin", "FireWork", "Circuit", "Warped", "Bubbly", "Ripple",}, function(mob)
                if mob == 'PixLized' then
                    _G.TapSkinNameEquip = 1
                elseif mob == 'Rocky' then
                    _G.TapSkinNameEquip = 2
                elseif mob == 'Hexed' then
                    _G.TapSkinNameEquip = 3
                elseif mob == 'Streak' then
                    _G.TapSkinNameEquip = 4
                elseif mob == 'Aurora' then
                    _G.TapSkinNameEquip = 5
                elseif mob == 'Magical' then
                    _G.TapSkinNameEquip = 6
                elseif mob == 'Aesthetic' then
                    _G.TapSkinNameEquip = 7
                elseif mob == 'Emerald' then
                    _G.TapSkinNameEquip = 8
                elseif mob == 'Swirl' then
                    _G.TapSkinNameEquipEquip = 9
                elseif mob == 'Lightning' then
                    _G.TapSkinNameEquip = 10
                elseif mob == 'Energy' then
                    _G.TapSkinNameEquip = 11
                elseif mob == 'Galactical' then
                    _G.TapSkinNameEquip = 12
                elseif mob == 'Vibrant' then
                    _G.TapSkinNameEquip = 13
                elseif mob == 'HellSkin' then
                    _G.TapSkinNameEquip = 14
                elseif mob == 'FireWork' then
                    _G.TapSkinNameEquip = 15
                elseif mob == 'Circuit' then
                    _G.TapSkinNameEquip = 16
                elseif mob == 'Warped' then
                    _G.TapSkinNameEquip = 17
                elseif mob == 'Bubbly' then
                    _G.TapSkinNameEquip = 18
                elseif mob == 'Ripple' then
                    _G.TapSkinNameEquip = 19
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Auto Tap", "Taps very fast for you", function(state)
                if state then
                    _G.autoTap = true;

            while _G.autoTap == true do
                game:GetService("ReplicatedStorage").Remotes.Tap:FireServer()
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoTap = false;
                end
            end)
            -- Tapping Legends X
            MainTappingX:NewToggle("Auto Rebirth", "auto rebirths for you", function(state)
                if state then
                    _G.autoRebirth = true;

            while _G.autoRebirth == true do
                
            local args = {[1] = _G.rebirthAmount}


            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))

                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoRebirth = false;
                end
            end)

            -- Tapping legends X

            MainTappingX:NewDropdown("Rebirth Amount", "pick the rebirths that you can do", {"1","5","20", "80", "400", "2k", "10k", "40k", "100k", "400k", "2M", "10M", "40M", "100M", "500M", "2B", "10B", "40B", "200B", "1T", "2T", "10T", "40T", "100T", "500T", "2Qd", "10Qd", "100Qd", "500Qd", "2Qn", "10Qn", "40Qn", "200Qn", "1Sx", "5Sx"}, function(mob)
                if mob == '1' then
                    _G.rebirthAmount = 1 
                elseif mob == '5' then
                    _G.rebirthAmount = 2 
                elseif mob == '20' then
                    _G.rebirthAmount = 3
                elseif mob == '80' then
                    _G.rebirthAmount = 4 
                elseif mob == '400' then
                    _G.rebirthAmount = 5 
                elseif mob == '2K' then
                    _G.rebirthAmount = 6
                elseif mob == '10K' then
                    _G.rebirthAmount = 7
                elseif mob == '40K' then
                    _G.rebirthAmount = 8
                elseif mob == '100K' then
                    _G.rebirthAmount = 9
                elseif mob == '400K' then
                    _G.rebirthAmount = 10
                elseif mob == '2M' then
                    _G.rebirthAmount = 11
                elseif mob == '10M' then
                    _G.rebirthAmount = 12
                elseif mob == '40M' then
                    _G.rebirthAmount = 13
                elseif mob == '100M' then
                    _G.rebirthAmount = 14
                elseif mob == '500M' then
                    _G.rebirthAmount = 15
                elseif mob == '2B' then
                    _G.rebirthAmount = 16
                elseif mob == '10B' then
                    _G.rebirthAmount = 17
                elseif mob == '40B' then
                    _G.rebirthAmount = 18
                elseif mob == '200B' then
                    _G.rebirthAmount = 19
                elseif mob == '1T' then
                    _G.rebirthAmount = 20
                elseif mob == '2T' then
                    _G.rebirthAmount = 21
                elseif mob == '10T' then
                    _G.rebirthAmount = 22
                elseif mob == '40T' then
                    _G.rebirthAmount = 23
                elseif mob == '100T' then
                    _G.rebirthAmount = 24
                elseif mob == '500T' then
                    _G.rebirthAmount = 25
                elseif mob == '2Qd' then
                    _G.rebirthAmount = 26
                elseif mob == '10Qd' then
                    _G.rebirthAmount = 27
                elseif mob == '100Qd' then
                    _G.rebirthAmount = 28
                elseif mob == '500Qd' then
                    _G.rebirthAmount = 29
                elseif mob == '2Qn' then
                    _G.rebirthAmount = 30
                elseif mob == '10Qn' then
                    _G.rebirthAmount = 31
                elseif mob == '40Qn' then
                    _G.rebirthAmount = 32
                elseif mob == '200Qn' then
                    _G.rebirthAmount = 33
                elseif mob == '1Sx' then
                    _G.rebirthAmount = 34
                elseif mob == '5Sx' then
                    _G.rebirthAmount = 35
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewButton("Enable ManuleAutoHatch", "when you open egg it auto hatches", function()
                local args = {
                    [1] = "AutoOpen"
                }
                
                game:GetService("ReplicatedStorage").Remotes.Settings:FireServer(unpack(args))
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Auto Best Pet", "Equips your best Pet", function(state)
                if state then
                    _G.UnequipAll = true;
                    while _G.UnequipAll == true do
                        game:GetService("ReplicatedStorage").Remotes.UnequipAll:InvokeServer()
                        wait(0.0000000000000000005)
                        game:GetService("ReplicatedStorage").Remotes.EquipBest:InvokeServer()
                        wait(0.5)
                    end
                else
                    _G.UnequipAll = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewButton("Teleport World", "Select world to teleport", function()
            local args = 
            {[1] = _G.selectedWorld}

            game:GetService("ReplicatedStorage").Remotes.TeleportToArea:FireServer(unpack(args))

            end)

            -- Tapping Legends X
            MainTappingX:NewDropdown("Teleport Select", "Select World", {"Spawn","Forest","Desert", "Winter", "Lava", "Aqua", "Sakura", "Mines", "Galaxy", "Heaven", "Hell", "Tech", "Steampunk", "Swamp", "Candy", "Magic", "Fantasy", "Toy", "Retro", "Lab", "Temple"}, function(mob)
                if mob == 'Spawn' then
                    _G.selectedWorld = 1 
                elseif mob == 'Forest' then
                    _G.selectedWorld = 2 
                elseif mob == 'Desert' then
                    _G.selectedWorld = 3
                elseif mob == 'Winter' then
                    _G.selectedWorld = 4 
                elseif mob == 'Lava' then
                    _G.selectedWorld = 5 
                elseif mob == 'Aqua' then
                    _G.selectedWorld = 6
                elseif mob == 'Sakura' then
                    _G.selectedWorld = 7
                elseif mob == 'Mines' then
                    _G.selectedWorld = 8
                elseif mob == 'Galaxy' then
                    _G.selectedWorld = 9
                elseif mob == 'Heaven' then
                    _G.selectedWorld = 10
                elseif mob == 'Hell' then
                    _G.selectedWorld = 11
                elseif mob == 'Tech' then
                    _G.selectedWorld = 12
                elseif mob == 'Steampunk' then
                    _G.selectedWorld = 13
                elseif mob == 'Swamp' then
                    _G.selectedWorld = 14
                elseif mob == 'Candy' then
                    _G.selectedWorld = 15
                elseif mob == 'Magic' then
                    _G.selectedWorld = 16
                elseif mob == 'Fantasy' then
                    _G.selectedWorld = 17
                elseif mob == 'Toy' then
                    _G.selectedWorld = 18
                elseif mob == 'Retro' then
                    _G.selectedWorld = 19
                elseif mob == 'Lab' then
                    _G.selectedWorld = 20
                elseif mob == 'Temple' then
                    _G.selectedWorld = 21
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Auto Open Egg", "Select HatchAmount, EggName before turning on", function(state)
                if state then
                    _G.AutoOpen = true;

                    while _G.AutoOpen == true do

            local args = 
            {[1] = _G.EggName,
            [2] = _G.HatchAmount}

            game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args))
                    wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.AutoOpen = false;
                end
            end)

            -- Tapping Legneds X
            MainTappingX:NewDropdown("EggName", "Select Egg Name", {"Basic Egg","Rare Egg","Forest Egg","Desert Egg","Winter Egg", "Lava Egg", "Aqua Egg", "Sakura Egg", "Mines Egg", "Galaxy Egg", "Heaven Egg", "Hell Egg", "Tech Egg", "Steampunk Egg", "Swamp Egg", "Candy Egg", "Magic Egg", "Fantasy Egg", "Toy Egg", "Retro Egg", "Lab Egg", "Temple Egg"}, function(mob)
                if mob == 'Basic Egg' then
                    _G.EggName = "Basic Egg"
                elseif mob == 'Rare Egg' then
                    _G.EggName = "Rare Egg"
                elseif mob == 'Forest Egg' then
                    _G.EggName = "Forest Egg"
                elseif mob == 'Desert Egg' then
                    _G.EggName = "Desert Egg"
                elseif mob == 'Winter Egg' then
                    _G.EggName = "Winter Egg"
                elseif mob == 'Lava Egg' then
                    _G.EggName = "Lava Egg"
                elseif mob == 'Aqua Egg' then
                    _G.EggName = "Aqua Egg"
                elseif mob == 'Sakura Egg' then
                    _G.EggName = "Sakura"
                elseif mob == 'Mines Egg' then
                    _G.EggName = "Mines Egg"
                elseif mob == 'Galaxy Egg' then
                    _G.EggName = "Galaxy Egg"
                elseif mob == 'Heaven Egg' then
                    _G.EggName = "Heaven Egg"
                elseif mob == 'Hell Egg' then
                    _G.EggName = "Hell egg"
                elseif mob == 'Tech Egg' then
                    _G.EggName = "Tech Egg"
                elseif mob == 'Steampunk Egg' then
                    _G.EggName = "Steampunk Egg"
                elseif mob == 'Swamp Egg' then
                    _G.EggName = "Swamp Egg"
                elseif mob == 'Candy Egg' then
                    _G.EggName = "Candy Egg"
                elseif mob == 'Magic Egg' then
                    _G.EggName = "Magic Egg"
                elseif mob == 'Fantasy Egg' then
                    _G.EggName = "Fantasy Egg"
                elseif mob == 'Toy Egg' then
                    _G.EggName = "Toy Egg"
                elseif mob == 'Retro Egg' then
                    _G.EggName = 'Retro Egg'
                elseif mob == 'Lab Egg' then
                    _G.EggName = 'Lab Egg'
                elseif mob == 'Temple Egg' then
                    _G.EggName = 'Temple Egg'
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewDropdown("Hatch Amount", "Select amount to hatch", {"1", "3", "4"}, function(mob)
                if mob == '1' then
                    _G.HatchAmount = 1 
                elseif mob == '3' then
                    _G.HatchAmount = 3
                elseif mob == '4' then
                    _G.HatchAmount = 4
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Upgrade Tap Multi", "auto upgrades tap Multi", function(state)
                if state then
                    _G.autotapupgrade = true;

            while _G.autotapupgrade == true do
            local args = {
                [1] = "Ruby",
                [2] = "TapMultiplier"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autotapupgrade = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewButton("Buy Free AutoClick", "Free autoclick = slow", function()
                local args = {
                    [1] = "Ruby",
                    [2] = "FreeAutoClicker"
                }
                
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("More rebirths", "Auto buys more rebirths", function(state)
                if state then
                    _G.autoRebirthupgrade = true;

            while _G.autoRebirthupgrade == true do
            local args = {
                [1] = "Ruby",
                [2] = "RebirthsUpgrade"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))

                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoRebirthupgrade = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewButton("Enable FreeAutoClicker", "The Name tells what it does", function() 
                local args = {
                    [1] = "FreeAutoEnabled"
                }
                
                game:GetService("ReplicatedStorage").Remotes.Settings:FireServer(unpack(args))
                
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("More Storage", "auto buys Storage", function(state)
                if state then
                    _G.autoStorgeupgrade = true;

            while _G.Storageupgrade == true do
            local args = {
                [1] = "Ruby",
                [2] = "PetStorage"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoStorgeupgrade = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Auto Buy WalkSpeed", "auto buys more WalkSpeed", function(state)
                if state then
                    _G.autoWalkupgrade = true;

            while _G.autoWalkupgrade == true do
            local args = {
                [1] = "Ruby",
                [2] = "WalkSpeed"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoWalkupgrade = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Crit Chance", "auto buys crit Chance", function(state)
                if state then
                    _G.autoCritupgrade = true;

            while _G.autoCritupgrade == true do
                
            local args = {
                [1] = "Ruby",
                [2] = "CriticalChances"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoCritupgrade = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Autoclicker Multi", "auto buys autoclick Multi", function(state)
                if state then
                    _g.autoMultiUpgrade = true;

            while _G.autoMultiUpgrade == true do
                
            local args = {
                [1] = "Ruby",
                [2] = "AutoClickerMultiplier"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _g.autoMultiUpgrade = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Max Combo", "auto buys max Combo", function(state)
                if state then
                    _G.autoCombo = true;

            while _G.autoCombo == true do
                
            local args = {
                [1] = "Ruby",
                [2] = "MaxCombo"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoCombo = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("better pet stats", "auto buys pet stats", function(state)
                if state then
                    _G.BetterStats = true;
                    while _G.BetterStats == true do
            local args = {
                [1] = "Ruby",
                [2] = "BetterPetStats"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
                    end
                else
                    _G.BetterStats = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Achievement Luck", "auto buys AchievementLuck", function(state)
                if state then
                    _G.AutoLuck = true;

            while _g.AutoLuck == true do
                
            local args = {
                [1] = "Ruby",
                [2] = "AchievementLuck"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.AutoLuck = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("World boost multi", "auto buys world boost multi", function(state)
                if state then
                    _G.BoostMulti = true;
                while _G.BoostMulti == true do
            local args = {
                [1] = "Tokens",
                [2] = "WorldBoost"
            }
            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
            wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
                end
            else
                _G.BoostMulti = false;
            end  
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("ReEnchant", "auto buy ReEnchant", function(state)
                if state then
                    _G.autoEnchant = true;

            while _G.autoEnchant == true do
                
            local args = {
                [1] = "Ruby",
                [2] = "ReEnchant"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoEnchant = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("TapDamage", "auto buys TapDamage", function(state)
                if state then
                    _G.autoDamage = true;

            while _G.autoDamage == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "TapDamage"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.autoDamage = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("More Equipped Pets", "auto buys pet equip", function(state)
                if state then
                    _G.morePets = true;

            while _G.morePets == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "TapDamage"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.morePets = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Gold Chance", "auto buys GoldChance", function(state)
                if state then
                    _G.GoldChance = true;

            while _G.GoldChance == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "GoldenChance"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.GoldChance = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Fast Eggs 'Needs Tokens' ", "auto buys FasterEggs", function(state)
                if state then
                    _G.FastEgg = true;

            while _G.FastEgg == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "FasterEggs"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("More Luck", "auto buys more luck", function(state)
                if state then
                    _G.MoreLuck = true;

            while _G.MoreLuck == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "MoreLuck"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.MoreLuck = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Rainbow Chance", "auto buys rainbow Chance", function(state)
                if state then
                    _G.RainBowChance = true;

            while _G.RainBow == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "RainbowChance"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.RainBowChance = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("More Rubies", "auto buys ruby upgrade", function(state)
                if state then
                    _G.MoreRuby = true;

            while _G.MoreRuby == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "RubyMultiplier"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.MoreRuby = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Chest Chance", "auto buys chest Chance", function(state)
                if state then
                    _G.ChestChance = true;

            while _G.ChestChance == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "ChestChances"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.ChestChance = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Pet Level", "auto buys pet level", function(state)
                if state then
                    _G.PetLevel = true;

            while _G.PetLevel == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "MaxPetLevel"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.PetLevel = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("EnchantBonus", " auto buys EnchantBonus", function(state)
                if state then
                    _G.EnchantBonus = true;

            while _G.EnchantBonus == true do
                
            local args = {
                [1] = "Tokens",
                [2] = "MaxEnchant"
            }

            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.EnchantBonus = false;
                end
            end)

            -- Tapping Legendsm X
            MainTappingX:NewToggle("Extract Rubies", "Auto Extract Rubies", function(state)
                if state then
                    _G.AutoRubies = true;
                    
            while _G.AutoRubies == true do
                local args = {
                    [1] = 2
                }
                
                game:GetService("ReplicatedStorage").Remotes.Extract:FireServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.AutoRubies = false;
                end
            end)

            -- Tapping Legends X
            MainTappingX:NewToggle("Extract Taps", "Auto Extract Taps", function(state)
                if state then
                    _G.AutoTap = true;
                    
            while _G.AutoTap == true do
                local args = {
                    [1] = 1
                }
                
                game:GetService("ReplicatedStorage").Remotes.Extract:FireServer(unpack(args))
                wait(0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000005)
            end
                else
                    _G.AutoRubies = false;
                end
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
            if game.PlaceId == 6872265039 then
                local BedWars = Window:NewTab("BedWars")
                local MainBedWars = BedWars:NewSection("Bedwars Scripts")
                MainBedWars:NewButton("Vape V4", "loads Vape V4 Script", function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/NewMainScript.lua", true))()
            end)

            MainBedWars:NewButton("Sape", "loads Sape Script", function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/vodxn/sape/main/Initiate.lua"))()
            end)

            MainBedWars:NewButton("Rektsky", "loads Rektsky Script", function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/8pmX8/rektsky4roblox/main/mainscript.lua"))()
            end)

            MainBedWars:NewButton("Future", "loads Future Script", function()
                loadstring(game:HttpGet('https://raw.githubusercontent.com/joeengo/Future/main/loadstring.lua', true))()
            end)
            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
            MainSupportedGames:NewLabel("BedWars")
            MainSupportedGames:NewLabel("FlagWars")
            MainSupportedGames:NewLabel("Rebirth Champions X")
            MainSupportedGames:NewLabel("Chinese freebie game")
            MainSupportedGames:NewLabel("Tapping Legends X")
            MainSupportedGames:NewLabel("Tai Verdes Concert")
            MainSupportedGames:NewLabel("Islands of Move")
            MainSupportedGames:NewLabel("Mansion of Wonder")
            MainSupportedGames:NewLabel("24kGoldn Concert")
            MainSupportedGames:NewLabel("Race Clicker")
            MainSupportedGames:NewLabel("Big Paintball")
            MainSupportedGames:NewLabel("type /console")
        end
        ---------------------------------------------------------------------------------------------------------------------------------------
            if game.PlaceId == 9285238704 then
                local RaceClicker = Window:NewTab("Race Clicker")
                local MainRaceClick = RaceClicker:NewSection("Games")
                MainRaceClick:NewToggle("AutoFarm", "auto farms for you", function(state)
                    if state then
                        _G.RaceFarm = true;

                        while _G.RaceFarm == true do
                                                --settings (make first two values values bigger if script often bugs for you)
                            local delay1 = _G.Delay2
                            local delay2 = _G.Delay
                            local onlywhileround = true
                            --main
                            local plr = game:service'Players'.LocalPlayer
                            while task.wait() do
                                pcall(function()
                                    if plr.PlayerGui.UI_Main.UI.TopMenu.RaceTimer.TextLabel.Text == '' and onlywhileround then
                                        repeat task.wait() until plr.PlayerGui.UI_Main.UI.TopMenu.RaceTimer.TextLabel.Text ~= ''
                                        task.wait(1)
                                    end
                                    for i,v in pairs(workspace.Environment:GetDescendants()) do
                                        if v:FindFirstChildWhichIsA'TouchTransmitter' then
                                            firetouchinterest(v, plr.Character.HumanoidRootPart, 0)
                                            task.wait((v.Parent.Name == 'Stage1K' and delay1) or delay2)
                                        end
                                    end
                                end)
                            end
                        end
                    else
                        _G.RaceFarm = false;
                    end
                end)

                MainRaceClick:NewLabel("Change the delays, recommend 2 then 0.3")

                MainRaceClick:NewTextBox("Delay 'recommend 2'", "put delay", function(txt)
                    _G.Delay = txt
                end)

                MainRaceClick:NewTextBox("Delay2 'recommend 0.3'", "put delay", function(txt)
                    _G.Delay2 = txt
                end)

                local SupportedGames = Window:NewTab("Supported Games!!!")
                local MainSupportedGames = SupportedGames:NewSection("Games")
                MainSupportedGames:NewLabel("BedWars")
                MainSupportedGames:NewLabel("FlagWars")
                MainSupportedGames:NewLabel("Rebirth Champions X")
                MainSupportedGames:NewLabel("Chinese freebie game")
                MainSupportedGames:NewLabel("Tapping Legends X")
                MainSupportedGames:NewLabel("Tai Verdes Concert")
                MainSupportedGames:NewLabel("Islands of Move")
                MainSupportedGames:NewLabel("Mansion of Wonder")
                MainSupportedGames:NewLabel("24kGoldn Concert")
                MainSupportedGames:NewLabel("Race Clicker")
                MainSupportedGames:NewLabel("Big Paintball")
                MainSupportedGames:NewLabel("type /console")
            end
        ---------------------------------------------------------------------------------------------------------------------------------------
            if game.PlaceId == 3527629287 then
                local PaintBall = Window:NewTab("Big Paint Ball")
                local MainPaint = PaintBall:NewSection("Main")

                MainPaint:NewButton("Unlock Guns", "get all the Games", function()
                    loadstring(game:HttpGet('https://pastebin.com/raw/yPa19SEB', true))()
                end)   

                MainPaint:NewButton("CERBERUS", "loads a different PaintBall script", function()
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/0xd5f/CERBERUS/main/CERBERUS.lua", true))()
                end) 

                MainPaint:NewButton("Ski Hub V2", "loads a different PaintBall script", function ()
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/Yousuck780/BP/main/Big%20paintball", true))()
                end)

                local SupportedGames = Window:NewTab("Supported Games!!!")
                local MainSupportedGames = SupportedGames:NewSection("Games")
                MainSupportedGames:NewLabel("BedWars")
                MainSupportedGames:NewLabel("FlagWars")
                MainSupportedGames:NewLabel("Rebirth Champions X")
                MainSupportedGames:NewLabel("Chinese freebie game")
                MainSupportedGames:NewLabel("Tapping Legends X")
                MainSupportedGames:NewLabel("Tai Verdes Concert")
                MainSupportedGames:NewLabel("Islands of Move")
                MainSupportedGames:NewLabel("Mansion of Wonder")
                MainSupportedGames:NewLabel("24kGoldn Concert")
                MainSupportedGames:NewLabel("Race Clicker")
                MainSupportedGames:NewLabel("Big Paintball")
                MainSupportedGames:NewLabel("type /console")
            end
 	---------------------------------------------------------------------------------------------------------------------------------------
	if game.PlaceId == 286090429 then
		local Arsenal = Window:NewTab("Arsenal")
            	local MainArsenal = Arsenal:NewSection("Main")
		
		MainArsenal:NewButton("Aimbot + FOV", "self explain", function()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Holding = false

-- AIMBOT SETTINGS

_G.AimbotEnabled = true -- true = Aimbot On/false = Aimbot Off
_G.TeamCheck = true -- true = Checks team/false = Doesn't check team
_G.AimPart = "Head" -- Part to aim at
_G.Sensitivity = 0 -- Lock on to player delay

-- FOV CIRCLE SETTINGS

_G.CircleSides = 64
_G.CircleColor = Color3.fromRGB(255, 255, 255) -- circle color
_G.CircleTransparency = 0.7 -- Circle transparency
_G.CircleRadius = 80
_G.CircleFilled = false -- Circle fill
_G.CircleVisible = true -- Circle visible
_G.CircleThickness = 0

local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
FOVCircle.Radius = _G.CircleRadius
FOVCircle.Filled = _G.CircleFilled
FOVCircle.Color = _G.CircleColor
FOVCircle.Visible = _G.CircleVisible
FOVCircle.Radius = _G.CircleRadius
FOVCircle.Transparency = _G.CircleTransparency
FOVCircle.NumSides = _G.CircleSides
FOVCircle.Thickness = _G.CircleThickness

local function GetClosestPlayer()
	local MaximumDistance = _G.CircleRadius
	local Target = nil

	for _, v in next, Players:GetPlayers() do
		if v.Name ~= LocalPlayer.Name then
			if _G.TeamCheck == true then
				if v.team ~= LocalPlayer.Team then
					if v.Character ~= nil then
						if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
							if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
								local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
								local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

								if VectorDistance < MaximumDistance then
									Target = v
								end
							end
						end
					end
				end
			else
				if v.Character ~= nil then
						if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
							if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
								local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
								local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

								if VectorDistance < MaximumDistance then
									Target = v
								end
							end
						end
					end
				end
			end
		end
	return Target
end

UserInputService.InputBegan:Connect(function(Input)
	if Input.UserInputType == Enum.UserInputType.MouseButton2 then
		Holding = true
	end
end)

UserInputService.InputEnded:Connect(function(Input)
	if Input.UserInputType == Enum.UserInputType.MouseButton2 then
		Holding = false
	end
end)

RunService.RenderStepped:Connect(function()
	FOVCircle.Position = Vector2.new(UserInputService.GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
	FOVCircle.Radius = _G.CircleRadius
	FOVCircle.Filled = _G.CircleFilled
	FOVCircle.Color = _G.CircleColor
	FOVCircle.Visible = _G.CircleVisible
	FOVCircle.Radius = _G.CircleRadius
	FOVCircle.Transparency = _G.CircleTransparency
	FOVCircle.NumSides = _G.CircleSides
	FOVCircle.Thickness = _G.CircleThickness

	if Holding == true and _G.AimbotEnabled == true then
		TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character{_G.AimPart}.Position)}):Play()
	end
end)
		end)
		
	MainArsenal:NewButton("Gun Mods", "Upgrades the gun", function()
local replicationstorage = game.ReplicatedStorage

for i, v in pairs(replicationstorage.Weapons:GetDescendants()) do
   if v.Name == "Auto" then
       v.Value = true
   end
   if v.Name == "RecoilControl" then
       v.Value = 0
   end
   if v.Name == "MaxSpread" then
       v.Value = 0
   end
   if v.Name == "ReloadTime" then
      v.Value = 0.000000000.5
   end
   if v.Name == "FireRate" then
       v.Value = 0.000000000000000.5
   end
   if v.Name == "Crit" then
       v.Value = 999999
   end
end
	end)
	end
        ---------------------------------------------------------------------------------------------------------------------------------------

        if game.PlaceId ~= 123 then
            a = false;
        end

        if a == false then
            local BedwarsManual = Window:NewTab("Bedwars loader?")
            local MainBedWarsManual = BedwarsManual:NewSection("Are you you in a Bedwars match")
            MainBedWarsManual:NewButton("Yes", "loads the bedwars script", function()
            wait(cooldown)
            cooldown = 0.5
            local Bedwars = Window:NewTab("Bedwars")
            local MainBedWars = Bedwars:NewSection("Gay")
                        MainBedWars:NewButton("Vape Private", "loads Sape Script", function()
                            loadstring(game:HttpGet("https://raw.githubusercontent.com/vodxn/sape/main/Initiate.lua"))()
                        end)
                
                        MainBedWars:NewButton("Rektsky", "loads Rektsky Script", function()
                            loadstring(game:HttpGet("https://raw.githubusercontent.com/8pmX8/rektsky4roblox/main/mainscript.lua"))()
                        end)
                
                        MainBedWars:NewButton("Future", "loads Future Script", function()
                            loadstring(game:HttpGet('https://raw.githubusercontent.com/joeengo/Future/main/loadstring.lua', true))()
                        end)

                        
                        cooldown = 999999
                        cooldown2 = 999999
                    end)

            MainBedWarsManual:NewButton("No", "game is not Supported", function()
                wait(cooldown2)
                cooldown2 = 0.5
                    --Main
        local Main = Window:NewTab("Player")
        local MainSection = Main:NewSection("Main")

        --Speed Button
        MainSection:NewButton("WalkSpeed 150", "Makes you go 150 times faster", function()
            loadstring(game:HttpGet('https://pastebin.com/raw/7wZq13g0'))()
        end)

        --Jump Button
        MainSection:NewButton("JumpPower 150", "Makes you jump 150 times higher", function()
            loadstring(game:HttpGet('https://pastebin.com/raw/1fgaFwyP'))()
        end)

        --Infinte Jump Button
        MainSection:NewButton("infinte Jump", "makes you jump infinite times", function()
            loadstring(game:HttpGet('https://pastebin.com/raw/JZYc0v9r'))()
        end)

        --Fake Kick
        MainSection:NewButton("Fake Kick/Ban", "Makes you get Fake Kicked", function()
            game.Players.LocalPlayer:Kick(_G.KickMessage)
        end)
        MainSection:NewTextBox("Edit KickMessage", "Don't put too many words", function(txt)
            _G.KickMessage = txt
        end)


            local SupportedGames = Window:NewTab("Supported Games!!!")
            local MainSupportedGames = SupportedGames:NewSection("Games")
                MainSupportedGames:NewLabel("BedWars")
                MainSupportedGames:NewLabel("FlagWars")
                MainSupportedGames:NewLabel("Rebirth Champions X")
                MainSupportedGames:NewLabel("Chinese freebie game")
                MainSupportedGames:NewLabel("Tapping Legends X")
                MainSupportedGames:NewLabel("Tai Verdes Concert")
                MainSupportedGames:NewLabel("Islands of Move")
                MainSupportedGames:NewLabel("Mansion of Wonder")
                MainSupportedGames:NewLabel("24kGoldn Concert")
                MainSupportedGames:NewLabel("Race Clicker")
                MainSupportedGames:NewLabel("Big Paintball")
                MainSupportedGames:NewLabel("type /console")

                cooldown2 = 999999
                cooldown = 999999
            end)
        end

            --[[detect PlaceId
        local gameid = game.PlaceId
        print(gameid)
        ]]

    elseif _G.KeyInput == "gigahubsuck" then
        game.Players.LocalPlayer:Kick("Sorry but GigaHub does not allow rude people. ")
    elseif _G.KeyInput == "Gigahubsuck" then
        game.Players.LocalPlayer:Kick("Sorry but GigaHub does not allow rude people. ")
    elseif _G.KeyInput == "l" then
        game.Players.LocalPlayer:Kick("Sorry but GigaHub does not allow rude people. ")
    elseif _G.KeyInput == "Dumbass" then
        game.Players.LocalPlayer:Kick("Sorry but GigaHub does not allow rude people. ")
    else
        Notification.new("error", "Incorrect Key :(", "incorrect key can't load Premium Hub!")
    end
end)

MainKey:NewButton("Join The Discord", "copys discord link", function()
    Notification.new("info", "Discord", "Dicord server is copied to clipboard!")
    setclipboard("https://discord.gg/vNwA3gZP3T")
end)

-- Feature Not ready yet/I have to make a key link for it
    --[[MainKey:NewButton("Get Key", "copys key link", function()
        setclipboard("https://raw.githubusercontent.com/ScRiPtsTerS/GigaChadKe/main/key")
        Notification.new("info", "Key", "key link is copied to clipboard!")
    end)]]
        
